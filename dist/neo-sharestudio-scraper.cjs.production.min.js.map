{"version":3,"file":"neo-sharestudio-scraper.cjs.production.min.js","sources":["../src/constants.ts","../src/stroke.ts","../src/index.ts"],"sourcesContent":["export const NEO_METADATA_FETCH_URL = 'https://neonotes2-d0880.firebaseio.com';\n\nexport const NEOINK_DATA_FETCH_URL =\n         'https://firebasestorage.googleapis.com/v0/b/neonotes2-d0880.appspot.com/o';\n","import type { NeoInkDot } from \"./types\";\n\nexport function getDots(\n  // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n  data: string | any,\n  dotCount: number,\n  time: number,\n  scale = 1\n): NeoInkDot[] | undefined {\n  let dotBlob: Uint8Array;\n  if (typeof data === 'string') {\n    const binaryString = atob(data);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    dotBlob = bytes;\n  } else {\n    dotBlob = data.toUint8Array();\n  }\n\n  const dots = [];\n\n  const dotSize = dotBlob.length / dotCount; // 16 or 17\n  let shiftDot = 0;\n  if (!(dotSize === 16 || dotSize === 17)) {\n    console.log('invalid dot', dotBlob.length, dotSize);\n    return;\n  }\n  if (dotSize === 17) {\n    shiftDot = 1;\n  }\n\n  let dotTime = time;\n  for (let i = 0; i < dotCount; i++) {\n    const st = i * dotSize;\n    const end = st + dotSize;\n    const d = dotBlob.slice(st, end);\n\n    const deltaTime = d[0];\n    const force = toFloat(d, 1 + shiftDot);\n    const x = toFloat(d, 5 + shiftDot) * scale;\n    const y = toFloat(d, 9 + shiftDot) * scale;\n\n    dotTime += deltaTime;\n    const dot = {\n      deltaTime,\n      time: dotTime,\n      f: force,\n      x,\n      y,\n    };\n    dots.push(dot);\n  }\n  \n  invalidDotsCheck(dots);\n  \n  return dots;\n}\n\nexport function getTransform(\n  transformData: string | { toUint8Array: () => Uint8Array },\n  size: { w: number; h: number },\n  rect: { x: number; width: number; y: number; height: number }\n) {\n\n  let strokeTransform: Uint8Array | undefined;\n  if (transformData) {\n    if (typeof transformData === 'string') {\n      const binaryString = atob(transformData);\n      const len = binaryString.length;\n      const bytes = new Uint8Array(len);\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      strokeTransform = bytes;\n    } else {\n      strokeTransform = transformData.toUint8Array();\n    }\n  }\n\n  let transform = [\n    1,\n    0,\n    0,\n    1,\n    (-rect.x / rect.width) * size.w,\n    (-rect.y / rect.height) * size.h,\n  ];\n\n  // let transform = [1, 0, 0, 1, 0, 0]\n  if (!strokeTransform) {\n    return transform;\n  }\n\n  if (strokeTransform.length !== 24) {\n    console.log('transform size error', strokeTransform.length);\n    return transform;\n  }\n\n  transform = [];\n  for (let i = 0; i < 6; i++) {\n    const m = toFloat(strokeTransform, i * 4);\n    transform.push(m);\n  }\n\n  const m1 = transform[0];\n  const m2 = transform[1];\n  let m3 = (transform[2] / rect.width) * size.w;\n  const m4 = transform[3];\n  const m5 = transform[4];\n  let m6 = (transform[5] / rect.height) * size.h;\n\n  m3 -= (rect.x / rect.width) * size.w;\n  m6 -= (rect.y / rect.height) * size.h;\n  transform = [m1, m4, m2, m5, m3, m6];\n  \n  return transform;\n}\n\nfunction invalidDotsCheck(dots: any) {\n  for (const d of dots) {\n    if (d.f < 0 || d.f > 1) {\n      console.log('Invalid Dot f', dots);\n      return;\n    }\n    if (d.x < 0 || d.x > 200) {\n      console.log('Invalid Dot x', dots);\n      return;\n    }\n    if (d.y < 0 || d.y > 200) {\n      console.log('Invalid Dot y', dots);\n      return;\n    }\n  }\n}\n\nfunction toFloat(d: Uint8Array, index: number) {\n  const byte = d.slice(index, index + 4);\n  const view = new DataView(byte.buffer);\n  return view.getFloat32(0, true);\n}\n\nexport function intToByteArray(input: number) {\n  const arr = new Uint8Array(4);\n  const dv = new DataView(arr.buffer);\n  dv.setUint32(0, input, true);\n  return Array.from(arr);\n}\n","import axios, { isCancel } from 'axios';\nimport { NEO_METADATA_FETCH_URL, NEOINK_DATA_FETCH_URL } from './constants';\nimport type { HandSpyPage, NeoInkItem, NeoInkItemData, NeoNoteSize } from './types';\nimport { getDots } from './stroke';\n\nexport const fetchNeoInkItems = async (id: string): Promise<NeoInkItem[]> => {\n  try {\n    const response = await axios.get(NEOINK_DATA_FETCH_URL, {\n      params: {\n        prefix: `sharestudio/${id}/`,\n        delimiter: '/',\n      },\n    });\n    return response.data.items;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n    return [];\n  }\n};\n\nexport const fetchNeoInkItemData = async (item: NeoInkItem): Promise<NeoInkItemData | null> => {\n  try {\n    const response = await axios.get(`${NEOINK_DATA_FETCH_URL}/${encodeURIComponent(item.name)}`, {\n      params: {\n        alt: 'media',\n      },\n    });\n\n    for (const stroke of response.data.strokes) {\n      stroke.dots = getDots(stroke.data, stroke.dotCount, stroke.startTime);\n    }\n\n    return response.data;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n  }\n  return null;\n};\n\nexport const fetchNeoNoteSize = async (itemData: Partial<NeoInkItemData>): Promise<NeoNoteSize> => {\n  const url = `page/${itemData.section}/${itemData.owner}/${itemData.bookCode}/0.json`;\n  const defaultRect = {\n      height:118,\n      width: 91,\n      x: 5,\n      y: 5\n  };\n  try {\n    const response = await axios.get(`${NEO_METADATA_FETCH_URL}/${url}`);\n    return response.data;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n    return defaultRect;\n  }\n}\n\nexport const fetchNeoPages = async (id: string) => {\n  const items = await fetchNeoInkItems(id);\n\n  const pages: HandSpyPage[] = [];\n  for (const item of items) {\n    const data = await fetchNeoInkItemData(item);\n    if (!data) {\n      continue;\n    }\n\n    const size = await fetchNeoNoteSize(data);\n    const page: HandSpyPage = {\n      width: size.width,\n      height: size.height,\n      metadata: {\n        section: data.section,\n        owner: data.owner,\n        bookCode: data.bookCode,\n        pageNumber: data.pageNumber,\n      },\n      strokes: [],\n    };\n\n    for (const stroke of data.strokes) {\n      page.strokes.push({\n        startTime: stroke.startTime,\n        endTime: stroke.dots.sort((a, b) => a.time - b.time)[stroke.dots.length - 1].time,\n        dots: stroke.dots.map((dot) => ({\n          timestamp: dot.time,\n          pressure: dot.f,\n          x: dot.x,\n          y: dot.y,\n        })),\n      });\n    }\n    pages.push(page);\n  }\n\n  return pages;\n};\n"],"names":["NEOINK_DATA_FETCH_URL","getDots","data","dotCount","time","scale","dotBlob","binaryString","atob","len","length","bytes","Uint8Array","i","charCodeAt","toUint8Array","dots","dotSize","shiftDot","dotTime","st","d","slice","deltaTime","force","toFloat","x","y","push","f","_step","_iterator","_createForOfIteratorHelperLoose","done","value","console","log","invalidDotsCheck","index","byte","DataView","buffer","getFloat32","fetchNeoInkItems","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","axios","get","params","prefix","delimiter","abrupt","sent","items","t0","isCancel","message","error","stop","_x","apply","arguments","fetchNeoInkItemData","_ref2","_callee2","item","response","stroke","_context2","encodeURIComponent","name","alt","strokes","startTime","_x2","fetchNeoNoteSize","_ref3","_callee3","itemData","url","defaultRect","_context3","section","owner","bookCode","height","width","NEO_METADATA_FETCH_URL","_x3","fetchNeoPages","_ref4","_callee4","pages","_iterator2","_step2","size","page","_iterator3","_step3","_context4","metadata","pageNumber","endTime","sort","a","b","map","dot","timestamp","pressure","_x4"],"mappings":"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"}