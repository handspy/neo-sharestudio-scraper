{"version":3,"file":"neo-sharestudio-scraper.cjs.development.js","sources":["../src/constants.ts","../src/stroke.ts","../src/index.ts"],"sourcesContent":["export const NEO_METADATA_FETCH_URL = 'https://neonotes2-d0880.firebaseio.com';\n\nexport const NEOINK_DATA_FETCH_URL =\n         'https://firebasestorage.googleapis.com/v0/b/neonotes2-d0880.appspot.com/o';\n","import type { NeoInkDot } from \"./types\";\n\nexport function getDots(\n  // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n  data: string | any,\n  dotCount: number,\n  time: number,\n  scale = 1\n): NeoInkDot[] | undefined {\n  let dotBlob: Uint8Array;\n  if (typeof data === 'string') {\n    const binaryString = atob(data);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    dotBlob = bytes;\n  } else {\n    dotBlob = data.toUint8Array();\n  }\n\n  const dots = [];\n\n  const dotSize = dotBlob.length / dotCount; // 16 or 17\n  let shiftDot = 0;\n  if (!(dotSize === 16 || dotSize === 17)) {\n    console.log('invalid dot', dotBlob.length, dotSize);\n    return;\n  }\n  if (dotSize === 17) {\n    shiftDot = 1;\n  }\n\n  let dotTime = time;\n  for (let i = 0; i < dotCount; i++) {\n    const st = i * dotSize;\n    const end = st + dotSize;\n    const d = dotBlob.slice(st, end);\n\n    const deltaTime = d[0];\n    const force = toFloat(d, 1 + shiftDot);\n    const x = toFloat(d, 5 + shiftDot) * scale;\n    const y = toFloat(d, 9 + shiftDot) * scale;\n\n    dotTime += deltaTime;\n    const dot = {\n      deltaTime,\n      time: dotTime,\n      f: force,\n      x,\n      y,\n    };\n    dots.push(dot);\n  }\n  \n  invalidDotsCheck(dots);\n  \n  return dots;\n}\n\nexport function getTransform(\n  transformData: string | { toUint8Array: () => Uint8Array },\n  size: { w: number; h: number },\n  rect: { x: number; width: number; y: number; height: number }\n) {\n\n  let strokeTransform: Uint8Array | undefined;\n  if (transformData) {\n    if (typeof transformData === 'string') {\n      const binaryString = atob(transformData);\n      const len = binaryString.length;\n      const bytes = new Uint8Array(len);\n      for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      strokeTransform = bytes;\n    } else {\n      strokeTransform = transformData.toUint8Array();\n    }\n  }\n\n  let transform = [\n    1,\n    0,\n    0,\n    1,\n    (-rect.x / rect.width) * size.w,\n    (-rect.y / rect.height) * size.h,\n  ];\n\n  // let transform = [1, 0, 0, 1, 0, 0]\n  if (!strokeTransform) {\n    return transform;\n  }\n\n  if (strokeTransform.length !== 24) {\n    console.log('transform size error', strokeTransform.length);\n    return transform;\n  }\n\n  transform = [];\n  for (let i = 0; i < 6; i++) {\n    const m = toFloat(strokeTransform, i * 4);\n    transform.push(m);\n  }\n\n  const m1 = transform[0];\n  const m2 = transform[1];\n  let m3 = (transform[2] / rect.width) * size.w;\n  const m4 = transform[3];\n  const m5 = transform[4];\n  let m6 = (transform[5] / rect.height) * size.h;\n\n  m3 -= (rect.x / rect.width) * size.w;\n  m6 -= (rect.y / rect.height) * size.h;\n  transform = [m1, m4, m2, m5, m3, m6];\n  \n  return transform;\n}\n\nfunction invalidDotsCheck(dots: any) {\n  for (const d of dots) {\n    if (d.f < 0 || d.f > 1) {\n      console.log('Invalid Dot f', dots);\n      return;\n    }\n    if (d.x < 0 || d.x > 200) {\n      console.log('Invalid Dot x', dots);\n      return;\n    }\n    if (d.y < 0 || d.y > 200) {\n      console.log('Invalid Dot y', dots);\n      return;\n    }\n  }\n}\n\nfunction toFloat(d: Uint8Array, index: number) {\n  const byte = d.slice(index, index + 4);\n  const view = new DataView(byte.buffer);\n  return view.getFloat32(0, true);\n}\n\nexport function intToByteArray(input: number) {\n  const arr = new Uint8Array(4);\n  const dv = new DataView(arr.buffer);\n  dv.setUint32(0, input, true);\n  return Array.from(arr);\n}\n","import axios, { isCancel } from 'axios';\nimport { NEO_METADATA_FETCH_URL, NEOINK_DATA_FETCH_URL } from './constants';\nimport type { HandSpyPage, NeoInkItem, NeoInkItemData, NeoNoteSize } from './types';\nimport { getDots } from './stroke';\n\nexport const fetchNeoInkItems = async (id: string): Promise<NeoInkItem[]> => {\n  try {\n    const response = await axios.get(NEOINK_DATA_FETCH_URL, {\n      params: {\n        prefix: `sharestudio/${id}/`,\n        delimiter: '/',\n      },\n    });\n    return response.data.items;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n    return [];\n  }\n};\n\nexport const fetchNeoInkItemData = async (item: NeoInkItem): Promise<NeoInkItemData | null> => {\n  try {\n    const response = await axios.get(`${NEOINK_DATA_FETCH_URL}/${encodeURIComponent(item.name)}`, {\n      params: {\n        alt: 'media',\n      },\n    });\n\n    for (const stroke of response.data.strokes) {\n      stroke.dots = getDots(stroke.data, stroke.dotCount, stroke.startTime);\n    }\n\n    return response.data;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n  }\n  return null;\n};\n\nexport const fetchNeoNoteSize = async (itemData: Partial<NeoInkItemData>): Promise<NeoNoteSize> => {\n  const url = `page/${itemData.section}/${itemData.owner}/${itemData.bookCode}/0.json`;\n  const defaultRect = {\n      height:118,\n      width: 91,\n      x: 5,\n      y: 5\n  };\n  try {\n    const response = await axios.get(`${NEO_METADATA_FETCH_URL}/${url}`);\n    return response.data;\n  } catch (error) {\n    if (isCancel(error)) {\n      console.log('Request canceled', error.message);\n    } else {\n      console.error('Error', error);\n    }\n    return defaultRect;\n  }\n}\n\nexport const fetchNeoPages = async (id: string) => {\n  const items = await fetchNeoInkItems(id);\n\n  const pages: HandSpyPage[] = [];\n  for (const item of items) {\n    const data = await fetchNeoInkItemData(item);\n    if (!data) {\n      continue;\n    }\n\n    const size = await fetchNeoNoteSize(data);\n    const page: HandSpyPage = {\n      width: size.width,\n      height: size.height,\n      metadata: {\n        section: data.section,\n        owner: data.owner,\n        bookCode: data.bookCode,\n        pageNumber: data.pageNumber,\n      },\n      strokes: [],\n    };\n\n    for (const stroke of data.strokes) {\n      page.strokes.push({\n        startTime: stroke.startTime,\n        endTime: stroke.dots.sort((a, b) => a.time - b.time)[stroke.dots.length - 1].time,\n        dots: stroke.dots.map((dot) => ({\n          timestamp: dot.time,\n          pressure: dot.f,\n          x: dot.x,\n          y: dot.y,\n        })),\n      });\n    }\n    pages.push(page);\n  }\n\n  return pages;\n};\n"],"names":["NEO_METADATA_FETCH_URL","NEOINK_DATA_FETCH_URL","getDots","data","dotCount","time","scale","dotBlob","binaryString","atob","len","length","bytes","Uint8Array","i","charCodeAt","toUint8Array","dots","dotSize","shiftDot","console","log","dotTime","st","end","d","slice","deltaTime","force","toFloat","x","y","dot","f","push","invalidDotsCheck","_iterator","_createForOfIteratorHelperLoose","_step","done","value","index","byte","view","DataView","buffer","getFloat32","fetchNeoInkItems","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","response","wrap","_callee$","_context","prev","next","axios","get","params","prefix","delimiter","sent","abrupt","items","t0","isCancel","message","error","stop","_x","apply","arguments","fetchNeoInkItemData","_ref2","_callee2","item","stroke","_callee2$","_context2","encodeURIComponent","name","alt","strokes","startTime","_x2","fetchNeoNoteSize","_ref3","_callee3","itemData","url","defaultRect","_callee3$","_context3","section","owner","bookCode","height","width","_x3","fetchNeoPages","_ref4","_callee4","pages","_iterator2","_step2","size","page","_iterator3","_step3","_callee4$","_context4","metadata","pageNumber","endTime","sort","a","b","map","timestamp","pressure","_x4"],"mappings":"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"}